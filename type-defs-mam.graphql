type Info {
    version: String
}

type IndexInfo {
    fields: String
}

type CollectionSummary {
    name: String
    count: Float
    indexes: [String]
}

type SubscriptionStat {
    filter: String
    selection: String
    queueSize: Int
    eventCount: Int
}

type CollectionStat {
    name: String
    subscriptionCount: Int
    waitForCount: Int
    maxQueueSize: Int
    subscriptions: [SubscriptionStat]
}

type Stat {
    collections: [CollectionStat]
}

type Query {
    info: Info
    getChangeLog(id: String): [Float]
    getCollections: [CollectionSummary]
    stat: Stat
}

enum ChangeLogOp {
    CLEAR
    ON
    OFF
}

type Mutation {
    setChangeLog(op: ChangeLogOp): Int
}
