"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.accessResolvers = void 0;

async function getManagementAccessKey(_parent, _args, context) {
  return context.auth.getManagementAccessKey();
}

async function registerAccessKeys(_parent, args, context) {
  return context.auth.registerAccessKeys(args.account || '', args.keys || [], args.signedManagementAccessKey || '');
}

async function revokeAccessKeys(_parent, args, context) {
  return context.auth.revokeAccessKeys(args.account || '', args.keys || [], args.signedManagementAccessKey || '');
}

async function finishOperations(_parent, args, context) {
  const operationIds = new Set(args.operationIds || []);

  if (operationIds.size === 0) {
    return 0;
  }

  return context.data.finishOperations(operationIds);
}

const accessResolvers = {
  Query: {
    getManagementAccessKey
  },
  Mutation: {
    registerAccessKeys,
    revokeAccessKeys,
    finishOperations
  }
};
exports.accessResolvers = accessResolvers;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZXJ2ZXIvZ3JhcGhxbC9hY2Nlc3MuanMiXSwibmFtZXMiOlsiZ2V0TWFuYWdlbWVudEFjY2Vzc0tleSIsIl9wYXJlbnQiLCJfYXJncyIsImNvbnRleHQiLCJhdXRoIiwicmVnaXN0ZXJBY2Nlc3NLZXlzIiwiYXJncyIsImFjY291bnQiLCJrZXlzIiwic2lnbmVkTWFuYWdlbWVudEFjY2Vzc0tleSIsInJldm9rZUFjY2Vzc0tleXMiLCJmaW5pc2hPcGVyYXRpb25zIiwib3BlcmF0aW9uSWRzIiwiU2V0Iiwic2l6ZSIsImRhdGEiLCJhY2Nlc3NSZXNvbHZlcnMiLCJRdWVyeSIsIk11dGF0aW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBcUJBLGVBQWVBLHNCQUFmLENBQXNDQyxPQUF0QyxFQUFvREMsS0FBcEQsRUFBZ0VDLE9BQWhFLEVBQWlIO0FBQzdHLFNBQU9BLE9BQU8sQ0FBQ0MsSUFBUixDQUFhSixzQkFBYixFQUFQO0FBQ0g7O0FBRUQsZUFBZUssa0JBQWYsQ0FDSUosT0FESixFQUVJSyxJQUZKLEVBR0lILE9BSEosRUFJbUI7QUFDZixTQUFPQSxPQUFPLENBQUNDLElBQVIsQ0FBYUMsa0JBQWIsQ0FDSEMsSUFBSSxDQUFDQyxPQUFMLElBQWdCLEVBRGIsRUFFSEQsSUFBSSxDQUFDRSxJQUFMLElBQWEsRUFGVixFQUdIRixJQUFJLENBQUNHLHlCQUFMLElBQWtDLEVBSC9CLENBQVA7QUFJSDs7QUFFRCxlQUFlQyxnQkFBZixDQUNJVCxPQURKLEVBRUlLLElBRkosRUFHSUgsT0FISixFQUltQjtBQUNmLFNBQU9BLE9BQU8sQ0FBQ0MsSUFBUixDQUFhTSxnQkFBYixDQUNISixJQUFJLENBQUNDLE9BQUwsSUFBZ0IsRUFEYixFQUVIRCxJQUFJLENBQUNFLElBQUwsSUFBYSxFQUZWLEVBR0hGLElBQUksQ0FBQ0cseUJBQUwsSUFBa0MsRUFIL0IsQ0FBUDtBQUlIOztBQU1ELGVBQWVFLGdCQUFmLENBQ0lWLE9BREosRUFFSUssSUFGSixFQUdJSCxPQUhKLEVBSW1CO0FBQ2YsUUFBTVMsWUFBWSxHQUFHLElBQUlDLEdBQUosQ0FBUVAsSUFBSSxDQUFDTSxZQUFMLElBQXFCLEVBQTdCLENBQXJCOztBQUNBLE1BQUlBLFlBQVksQ0FBQ0UsSUFBYixLQUFzQixDQUExQixFQUE2QjtBQUN6QixXQUFPLENBQVA7QUFDSDs7QUFDRCxTQUFPWCxPQUFPLENBQUNZLElBQVIsQ0FBYUosZ0JBQWIsQ0FBOEJDLFlBQTlCLENBQVA7QUFDSDs7QUFFTSxNQUFNSSxlQUFlLEdBQUc7QUFDM0JDLEVBQUFBLEtBQUssRUFBRTtBQUNIakIsSUFBQUE7QUFERyxHQURvQjtBQUkzQmtCLEVBQUFBLFFBQVEsRUFBRTtBQUNOYixJQUFBQSxrQkFETTtBQUVOSyxJQUFBQSxnQkFGTTtBQUdOQyxJQUFBQTtBQUhNO0FBSmlCLENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQGZsb3dcblxuaW1wb3J0IHR5cGUge1xuICAgIEdyYXBoUUxSZXF1ZXN0Q29udGV4dCxcbn0gZnJvbSAnLi4vZGF0YS9jb2xsZWN0aW9uJztcbmltcG9ydCB0eXBlIHsgQWNjZXNzS2V5IH0gZnJvbSAnLi4vYXV0aCc7XG5pbXBvcnQgdHlwZSB7IEdyYXBoUUxSZXF1ZXN0Q29udGV4dEV4IH0gZnJvbSBcIi4vY29udGV4dFwiO1xuXG50eXBlIE1hbmFnZW1lbnRBcmdzID0ge1xuICAgIGFjY291bnQ/OiBzdHJpbmcsXG4gICAgc2lnbmVkTWFuYWdlbWVudEFjY2Vzc0tleT86IHN0cmluZyxcbn1cblxudHlwZSBSZWdpc3RlckFjY2Vzc0tleXNBcmdzID0gTWFuYWdlbWVudEFyZ3MgJiB7XG4gICAga2V5czogQWNjZXNzS2V5W10sXG59XG5cbnR5cGUgUmV2b2tlQWNjZXNzS2V5c0FyZ3MgPSBNYW5hZ2VtZW50QXJncyAmIHtcbiAgICBrZXlzOiBzdHJpbmdbXSxcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TWFuYWdlbWVudEFjY2Vzc0tleShfcGFyZW50OiBhbnksIF9hcmdzOiBhbnksIGNvbnRleHQ6IEdyYXBoUUxSZXF1ZXN0Q29udGV4dCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuIGNvbnRleHQuYXV0aC5nZXRNYW5hZ2VtZW50QWNjZXNzS2V5KCk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyQWNjZXNzS2V5cyhcbiAgICBfcGFyZW50OiBhbnksXG4gICAgYXJnczogUmVnaXN0ZXJBY2Nlc3NLZXlzQXJncyxcbiAgICBjb250ZXh0OiBHcmFwaFFMUmVxdWVzdENvbnRleHQsXG4pOiBQcm9taXNlPG51bWJlcj4ge1xuICAgIHJldHVybiBjb250ZXh0LmF1dGgucmVnaXN0ZXJBY2Nlc3NLZXlzKFxuICAgICAgICBhcmdzLmFjY291bnQgfHwgJycsXG4gICAgICAgIGFyZ3Mua2V5cyB8fCBbXSxcbiAgICAgICAgYXJncy5zaWduZWRNYW5hZ2VtZW50QWNjZXNzS2V5IHx8ICcnKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gcmV2b2tlQWNjZXNzS2V5cyhcbiAgICBfcGFyZW50OiBhbnksXG4gICAgYXJnczogUmV2b2tlQWNjZXNzS2V5c0FyZ3MsXG4gICAgY29udGV4dDogR3JhcGhRTFJlcXVlc3RDb250ZXh0LFxuKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgICByZXR1cm4gY29udGV4dC5hdXRoLnJldm9rZUFjY2Vzc0tleXMoXG4gICAgICAgIGFyZ3MuYWNjb3VudCB8fCAnJyxcbiAgICAgICAgYXJncy5rZXlzIHx8IFtdLFxuICAgICAgICBhcmdzLnNpZ25lZE1hbmFnZW1lbnRBY2Nlc3NLZXkgfHwgJycpO1xufVxuXG50eXBlIEZpbmlzaE9wZXJhdGlvbnNBcmdzID0ge1xuICAgIG9wZXJhdGlvbklkcz86IHN0cmluZ1tdLFxufVxuXG5hc3luYyBmdW5jdGlvbiBmaW5pc2hPcGVyYXRpb25zKFxuICAgIF9wYXJlbnQ6IGFueSxcbiAgICBhcmdzOiBGaW5pc2hPcGVyYXRpb25zQXJncyxcbiAgICBjb250ZXh0OiBHcmFwaFFMUmVxdWVzdENvbnRleHRFeCxcbik6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgY29uc3Qgb3BlcmF0aW9uSWRzID0gbmV3IFNldChhcmdzLm9wZXJhdGlvbklkcyB8fCBbXSk7XG4gICAgaWYgKG9wZXJhdGlvbklkcy5zaXplID09PSAwKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dC5kYXRhLmZpbmlzaE9wZXJhdGlvbnMob3BlcmF0aW9uSWRzKTtcbn1cblxuZXhwb3J0IGNvbnN0IGFjY2Vzc1Jlc29sdmVycyA9IHtcbiAgICBRdWVyeToge1xuICAgICAgICBnZXRNYW5hZ2VtZW50QWNjZXNzS2V5LFxuICAgIH0sXG4gICAgTXV0YXRpb246IHtcbiAgICAgICAgcmVnaXN0ZXJBY2Nlc3NLZXlzLFxuICAgICAgICByZXZva2VBY2Nlc3NLZXlzLFxuICAgICAgICBmaW5pc2hPcGVyYXRpb25zLFxuICAgIH0sXG59XG4iXX0=