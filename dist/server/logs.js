"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("./utils");

/*
 * Copyright 2018-2020 TON DEV SOLUTIONS LTD.
 *
 * Licensed under the SOFTWARE EVALUATION License (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at:
 *
 * http://www.ton.dev/licenses
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific TON DEV software governing permissions and
 * limitations under the License.
 */
function toJSON(value) {
  try {
    return JSON.stringify((0, _utils.toLog)(value));
  } catch (error) {
    return JSON.stringify(`${value}`);
  }
}

function str(arg) {
  const s = typeof arg === 'string' ? arg : toJSON(arg);
  return s.split('\n').join('\\n').split('\t').join('\\t');
}

function format(name, args) {
  return `${Date.now()}\t${name}\t${args.map(str).join('\t')}`;
}

class QLogs {
  static error(...args) {
    if (QLogs.stopped) {
      return;
    }

    console.error(...args);
  }

  static debug(...args) {
    if (QLogs.stopped) {
      return;
    }

    console.debug(...args);
  }

  create(name) {
    return {
      error(...args) {
        QLogs.error(...args);
      },

      debug(...args) {
        QLogs.debug(format(name, args));
      }

    };
  }

  stop() {
    QLogs.stopped = true;
  }

}

exports.default = QLogs;
QLogs.stopped = false;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2ZXIvbG9ncy5qcyJdLCJuYW1lcyI6WyJ0b0pTT04iLCJ2YWx1ZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciIsInN0ciIsImFyZyIsInMiLCJzcGxpdCIsImpvaW4iLCJmb3JtYXQiLCJuYW1lIiwiYXJncyIsIkRhdGUiLCJub3ciLCJtYXAiLCJRTG9ncyIsInN0b3BwZWQiLCJjb25zb2xlIiwiZGVidWciLCJjcmVhdGUiLCJzdG9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBa0JBOztBQWxCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFXQSxTQUFTQSxNQUFULENBQWdCQyxLQUFoQixFQUFvQztBQUNoQyxNQUFJO0FBQ0EsV0FBT0MsSUFBSSxDQUFDQyxTQUFMLENBQWUsa0JBQU1GLEtBQU4sQ0FBZixDQUFQO0FBQ0gsR0FGRCxDQUVFLE9BQU9HLEtBQVAsRUFBYztBQUNaLFdBQU9GLElBQUksQ0FBQ0MsU0FBTCxDQUFnQixHQUFFRixLQUFNLEVBQXhCLENBQVA7QUFDSDtBQUNKOztBQUVELFNBQVNJLEdBQVQsQ0FBYUMsR0FBYixFQUErQjtBQUMzQixRQUFNQyxDQUFDLEdBQUcsT0FBT0QsR0FBUCxLQUFlLFFBQWYsR0FBMEJBLEdBQTFCLEdBQWdDTixNQUFNLENBQUNNLEdBQUQsQ0FBaEQ7QUFDQSxTQUFPQyxDQUFDLENBQUNDLEtBQUYsQ0FBUSxJQUFSLEVBQWNDLElBQWQsQ0FBbUIsS0FBbkIsRUFBMEJELEtBQTFCLENBQWdDLElBQWhDLEVBQXNDQyxJQUF0QyxDQUEyQyxLQUEzQyxDQUFQO0FBQ0g7O0FBRUQsU0FBU0MsTUFBVCxDQUFnQkMsSUFBaEIsRUFBOEJDLElBQTlCLEVBQThDO0FBQzFDLFNBQVEsR0FBRUMsSUFBSSxDQUFDQyxHQUFMLEVBQVcsS0FBSUgsSUFBSyxLQUFJQyxJQUFJLENBQUNHLEdBQUwsQ0FBU1YsR0FBVCxFQUFjSSxJQUFkLENBQW1CLElBQW5CLENBQXlCLEVBQTNEO0FBQ0g7O0FBRWMsTUFBTU8sS0FBTixDQUFZO0FBRXZCLFNBQU9aLEtBQVAsQ0FBYSxHQUFHUSxJQUFoQixFQUEyQjtBQUN2QixRQUFJSSxLQUFLLENBQUNDLE9BQVYsRUFBbUI7QUFDZjtBQUNIOztBQUNEQyxJQUFBQSxPQUFPLENBQUNkLEtBQVIsQ0FBYyxHQUFHUSxJQUFqQjtBQUNIOztBQUNELFNBQU9PLEtBQVAsQ0FBYSxHQUFHUCxJQUFoQixFQUEyQjtBQUN2QixRQUFJSSxLQUFLLENBQUNDLE9BQVYsRUFBbUI7QUFDZjtBQUNIOztBQUNEQyxJQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYyxHQUFHUCxJQUFqQjtBQUNIOztBQUNKUSxFQUFBQSxNQUFNLENBQUNULElBQUQsRUFBcUI7QUFDdkIsV0FBTztBQUNUUCxNQUFBQSxLQUFLLENBQUMsR0FBR1EsSUFBSixFQUFVO0FBQ2RJLFFBQUFBLEtBQUssQ0FBQ1osS0FBTixDQUFZLEdBQUdRLElBQWY7QUFDQSxPQUhROztBQUlUTyxNQUFBQSxLQUFLLENBQUMsR0FBR1AsSUFBSixFQUFVO0FBQ2RJLFFBQUFBLEtBQUssQ0FBQ0csS0FBTixDQUFZVCxNQUFNLENBQUNDLElBQUQsRUFBT0MsSUFBUCxDQUFsQjtBQUNBOztBQU5RLEtBQVA7QUFRSDs7QUFDRFMsRUFBQUEsSUFBSSxHQUFHO0FBQ0FMLElBQUFBLEtBQUssQ0FBQ0MsT0FBTixHQUFnQixJQUFoQjtBQUNIOztBQTFCc0I7OztBQTZCM0JELEtBQUssQ0FBQ0MsT0FBTixHQUFnQixLQUFoQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxOC0yMDIwIFRPTiBERVYgU09MVVRJT05TIExURC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgU09GVFdBUkUgRVZBTFVBVElPTiBMaWNlbnNlICh0aGUgXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2VcbiAqIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZVxuICogTGljZW5zZSBhdDpcbiAqXG4gKiBodHRwOi8vd3d3LnRvbi5kZXYvbGljZW5zZXNcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIFRPTiBERVYgc29mdHdhcmUgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLy8gQGZsb3dcblxuaW1wb3J0IHsgdG9Mb2cgfSBmcm9tIFwiLi91dGlsc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFFMb2cge1xuICAgIGVycm9yKC4uLmFyZ3M6IGFueSk6IHZvaWQsXG4gICAgZGVidWcoLi4uYXJnczogYW55KTogdm9pZCxcbn1cblxuZnVuY3Rpb24gdG9KU09OKHZhbHVlOiBhbnkpOiBzdHJpbmcge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0b0xvZyh2YWx1ZSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShgJHt2YWx1ZX1gKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHN0cihhcmc6IGFueSk6IHN0cmluZyB7XG4gICAgY29uc3QgcyA9IHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnID8gYXJnIDogdG9KU09OKGFyZyk7XG4gICAgcmV0dXJuIHMuc3BsaXQoJ1xcbicpLmpvaW4oJ1xcXFxuJykuc3BsaXQoJ1xcdCcpLmpvaW4oJ1xcXFx0Jyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdChuYW1lOiBzdHJpbmcsIGFyZ3M6IHN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIGAke0RhdGUubm93KCl9XFx0JHtuYW1lfVxcdCR7YXJncy5tYXAoc3RyKS5qb2luKCdcXHQnKX1gO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRTG9ncyB7XG4gICAgc3RhdGljIHN0b3BwZWQ6IGJvb2xlYW47XG4gICAgc3RhdGljIGVycm9yKC4uLmFyZ3M6IGFueSkge1xuICAgICAgICBpZiAoUUxvZ3Muc3RvcHBlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoLi4uYXJncyk7XG4gICAgfVxuICAgIHN0YXRpYyBkZWJ1ZyguLi5hcmdzOiBhbnkpIHtcbiAgICAgICAgaWYgKFFMb2dzLnN0b3BwZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmRlYnVnKC4uLmFyZ3MpO1xuICAgIH1cblx0Y3JlYXRlKG5hbWU6IHN0cmluZyk6IFFMb2cge1xuXHQgICAgcmV0dXJuIHtcblx0XHRcdGVycm9yKC4uLmFyZ3MpIHtcblx0XHRcdFx0UUxvZ3MuZXJyb3IoLi4uYXJncyk7XG5cdFx0XHR9LFxuXHRcdFx0ZGVidWcoLi4uYXJncykge1xuXHRcdFx0XHRRTG9ncy5kZWJ1Zyhmb3JtYXQobmFtZSwgYXJncykpO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblx0c3RvcCgpIHtcbiAgICAgICAgUUxvZ3Muc3RvcHBlZCA9IHRydWU7XG4gICAgfVxufVxuXG5RTG9ncy5zdG9wcGVkID0gZmFsc2U7XG4iXX0=