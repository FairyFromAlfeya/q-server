"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("./utils");

/*
 * Copyright 2018-2020 TON DEV SOLUTIONS LTD.
 *
 * Licensed under the SOFTWARE EVALUATION License (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at:
 *
 * http://www.ton.dev/licenses
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific TON DEV software governing permissions and
 * limitations under the License.
 */
function toJSON(value) {
  try {
    return JSON.stringify((0, _utils.toLog)(value));
  } catch (error) {
    return JSON.stringify(`${value}`);
  }
}

function str(arg) {
  const s = typeof arg === 'string' ? arg : toJSON(arg);
  return s.split('\n').join('\\n').split('\t').join('\\t');
}

function format(name, args) {
  return `${Date.now()}\t${name}\t${args.map(str).join('\t')}`;
}

class QLogs {
  create(name) {
    return {
      error(...args) {
        console.error(format(name, args));
      },

      debug(...args) {
        console.debug(format(name, args));
      }

    };
  }

}

exports.default = QLogs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9sb2dzLmpzIl0sIm5hbWVzIjpbInRvSlNPTiIsInZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsImVycm9yIiwic3RyIiwiYXJnIiwicyIsInNwbGl0Iiwiam9pbiIsImZvcm1hdCIsIm5hbWUiLCJhcmdzIiwiRGF0ZSIsIm5vdyIsIm1hcCIsIlFMb2dzIiwiY3JlYXRlIiwiY29uc29sZSIsImRlYnVnIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBa0JBOztBQWxCQTs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBLFNBQVNBLE1BQVQsQ0FBZ0JDLEtBQWhCLEVBQW9DO0FBQ2hDLE1BQUk7QUFDQSxXQUFPQyxJQUFJLENBQUNDLFNBQUwsQ0FBZSxrQkFBTUYsS0FBTixDQUFmLENBQVA7QUFDSCxHQUZELENBRUUsT0FBT0csS0FBUCxFQUFjO0FBQ1osV0FBT0YsSUFBSSxDQUFDQyxTQUFMLENBQWdCLEdBQUVGLEtBQU0sRUFBeEIsQ0FBUDtBQUNIO0FBQ0o7O0FBRUQsU0FBU0ksR0FBVCxDQUFhQyxHQUFiLEVBQStCO0FBQzNCLFFBQU1DLENBQUMsR0FBRyxPQUFPRCxHQUFQLEtBQWUsUUFBZixHQUEwQkEsR0FBMUIsR0FBZ0NOLE1BQU0sQ0FBQ00sR0FBRCxDQUFoRDtBQUNBLFNBQU9DLENBQUMsQ0FBQ0MsS0FBRixDQUFRLElBQVIsRUFBY0MsSUFBZCxDQUFtQixLQUFuQixFQUEwQkQsS0FBMUIsQ0FBZ0MsSUFBaEMsRUFBc0NDLElBQXRDLENBQTJDLEtBQTNDLENBQVA7QUFDSDs7QUFFRCxTQUFTQyxNQUFULENBQWdCQyxJQUFoQixFQUE4QkMsSUFBOUIsRUFBOEM7QUFDMUMsU0FBUSxHQUFFQyxJQUFJLENBQUNDLEdBQUwsRUFBVyxLQUFJSCxJQUFLLEtBQUlDLElBQUksQ0FBQ0csR0FBTCxDQUFTVixHQUFULEVBQWNJLElBQWQsQ0FBbUIsSUFBbkIsQ0FBeUIsRUFBM0Q7QUFDSDs7QUFFYyxNQUFNTyxLQUFOLENBQVk7QUFDMUJDLEVBQUFBLE1BQU0sQ0FBQ04sSUFBRCxFQUFxQjtBQUMxQixXQUFPO0FBQ05QLE1BQUFBLEtBQUssQ0FBQyxHQUFHUSxJQUFKLEVBQVU7QUFDZE0sUUFBQUEsT0FBTyxDQUFDZCxLQUFSLENBQWNNLE1BQU0sQ0FBQ0MsSUFBRCxFQUFPQyxJQUFQLENBQXBCO0FBQ0EsT0FISzs7QUFJTk8sTUFBQUEsS0FBSyxDQUFDLEdBQUdQLElBQUosRUFBVTtBQUNkTSxRQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY1QsTUFBTSxDQUFDQyxJQUFELEVBQU9DLElBQVAsQ0FBcEI7QUFDQTs7QUFOSyxLQUFQO0FBUUE7O0FBVnlCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE4LTIwMjAgVE9OIERFViBTT0xVVElPTlMgTFRELlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBTT0ZUV0FSRSBFVkFMVUFUSU9OIExpY2Vuc2UgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZVxuICogdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlXG4gKiBMaWNlbnNlIGF0OlxuICpcbiAqIGh0dHA6Ly93d3cudG9uLmRldi9saWNlbnNlc1xuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgVE9OIERFViBzb2Z0d2FyZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vLyBAZmxvd1xuXG5pbXBvcnQgeyB0b0xvZyB9IGZyb20gXCIuL3V0aWxzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUUxvZyB7XG4gICAgZXJyb3IoLi4uYXJnczogYW55KTogdm9pZCxcbiAgICBkZWJ1ZyguLi5hcmdzOiBhbnkpOiB2b2lkLFxufVxuXG5mdW5jdGlvbiB0b0pTT04odmFsdWU6IGFueSk6IHN0cmluZyB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRvTG9nKHZhbHVlKSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGAke3ZhbHVlfWApO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gc3RyKGFyZzogYW55KTogc3RyaW5nIHtcbiAgICBjb25zdCBzID0gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgPyBhcmcgOiB0b0pTT04oYXJnKTtcbiAgICByZXR1cm4gcy5zcGxpdCgnXFxuJykuam9pbignXFxcXG4nKS5zcGxpdCgnXFx0Jykuam9pbignXFxcXHQnKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0KG5hbWU6IHN0cmluZywgYXJnczogc3RyaW5nW10pIHtcbiAgICByZXR1cm4gYCR7RGF0ZS5ub3coKX1cXHQke25hbWV9XFx0JHthcmdzLm1hcChzdHIpLmpvaW4oJ1xcdCcpfWA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFFMb2dzIHtcblx0Y3JlYXRlKG5hbWU6IHN0cmluZyk6IFFMb2cge1xuXHRcdHJldHVybiB7XG5cdFx0XHRlcnJvciguLi5hcmdzKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoZm9ybWF0KG5hbWUsIGFyZ3MpKTtcblx0XHRcdH0sXG5cdFx0XHRkZWJ1ZyguLi5hcmdzKSB7XG5cdFx0XHRcdGNvbnNvbGUuZGVidWcoZm9ybWF0KG5hbWUsIGFyZ3MpKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiJdfQ==