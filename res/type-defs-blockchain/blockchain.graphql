type BlockchainMasterSeqNoRange {
    """
    INCLUSIVE seq_no range border.
    Masterchain block seq_no that corresponds to the specified time_start left border of
    time interval.
    Can be used to define pagination range in functions, providing cursor-based pagination.

    If no corresponding masterchain block was found, null is returned. It may happen when the
    time_start timestamp refers to the historic data which is not available.
    """
    start: Int
    """
    EXCLUSIVE seq_no range border.
    Masterchain block seq_no that corresponds to the specified time_end right border of
    time interval.
    Can be used to define pagination range in functions, providing cursor-based pagination.

    If no seq_no was found, returns `null`.
    This may happen if there is no corresponding masterchain block yet for
    the specified `time_end` timestamp when `time_end` is close to `now`. We recommend
    omitting the right border seq_no for recent data pagination.
    """
    end: Int
}

input BlockchainMasterSeqNoFilter {
    "Minimum inclusive seq_no of corresponding master blocks"
    start: Int
    "Maximum exclusive seq_no of corresponding master blocks"
    end: Int
}

type BlockchainBlocksConnection {
    edges: [BlockchainBlocksEdge!]!
    pageInfo: PageInfo!
}

type BlockchainBlocksEdge {
    node: BlockchainBlock!
    cursor: String!
}

type BlockchainTransactionsConnection {
    edges: [BlockchainTransactionEdge!]!
    pageInfo: PageInfo!
}

type BlockchainTransactionEdge {
    node: BlockchainTransaction!
    cursor: String!
}

enum BlockchainMessageTypeFilterEnum {
    "External inbound"
    ExtIn
    "External outbound"
    ExtOut
    "Internal inbound"
    IntIn
    "Internal outbound"
    IntOut
}

type BlockchainMessagesConnection {
    edges: [BlockchainMessageEdge!]!
    pageInfo: PageInfo!
}

type BlockchainMessageEdge {
    node: BlockchainMessage!
    cursor: String!
}

type BlockchainQuery {
    """
    Account-related information
    """
    account(
        "Account address is required (64 hex symbols)"
        address: String!
    ): BlockchainAccountQuery

    block(hash: String!): BlockchainBlock
    block_by_seq_no(workchain: Int!, thread: String!, seq_no: Float!): BlockchainBlock
    transaction(hash: String!): BlockchainTransaction
    message(hash: String!): BlockchainMessage

    """
    Returns masterchain seq_no range for the specified time range
    to be used further in pagination functions.
    If `time_start` and/or `time_end` is null, then the corresponding seq_no range border
    is also null.
    """
    master_seq_no_range(
        "Start of the time range, inclusive"
         time_start: Int,
        "End of the time range, exclusive"
         time_end: Int,
    ): BlockchainMasterSeqNoRange

    """
    This node could be used for a cursor-based pagination of key blocks.
    """
    key_blocks(
        """
        By default there is special latency added for the fetched recent data (several seconds) to
        ensure impossibility of inserts before the latest fetched cursor (data consistency, for reliable pagination).
        It is possible to disable this guarantee and to reduce the latency of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        Filter by master blocks seq_no.
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "This field is mutually exclusive with 'last'"
        first: Int
        after: String

        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
        """
        Defines query scope.
        If `true` then query performed on a maximum time range supported by the cloud.
        If `false` then query performed on a recent time range supported by the cloud.
        You can find an actual information about time ranges on evercloud documentation.
        """
        archive: Boolean
    ): BlockchainBlocksConnection

    """
    This node could be used for a cursor-based pagination of blocks.
    """
    blocks(
        """
        By default there is special latency added for the fetched recent data (several seconds) to
        ensure impossibility of inserts before the latest fetched cursor (data consistency, for reliable pagination).
        It is possible to disable this guarantee and to reduce the latency of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The blocks could be filtered by seq_no of corresponding masterchain blocks.
        See also: block—Åhain { master_seq_no_range }
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int
        "Optional filter by thread (former 'shard'). Workchain filter is required if this filter is used"
        thread: String,

        "Optional filter by minimum transactions in a block (unoptimized, query could be dropped by timeout)"
        min_tr_count: Int,
        "Optional filter by maximum transactions in a block (unoptimized, query could be dropped by timeout)"
        max_tr_count: Int,

        "This field is mutually exclusive with 'last'"
        first: Int
        after: String

        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
        """
        Defines query scope.
        If `true` then query performed on a maximum time range supported by the cloud.
        If `false` then query performed on a recent time range supported by the cloud.
        You can find an actual information about time ranges on evercloud documentation.
        """
        archive: Boolean
    ): BlockchainBlocksConnection

    """
    This node could be used for a cursor-based pagination of transactions.
    """
    transactions(
        """
        By default there is special latency added for the fetched recent data (several seconds) to
        ensure impossibility of inserts before the latest fetched cursor (data consistency, for reliable pagination).
        It is possible to disable this guarantee and to reduce the latency of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockchain { master_seq_no_range }
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: String,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: String,

        "This field is mutually exclusive with 'last'"
        first: Int
        after: String

        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
        """
        Defines query scope.
        If `true` then query performed on a maximum time range supported by the cloud.
        If `false` then query performed on a recent time range supported by the cloud.
        You can find an actual information about time ranges on evercloud documentation.
        """
        archive: Boolean
    ): BlockchainTransactionsConnection
}

type BlockchainAccountQuery {
    """
    Account information (e.g. boc).
    """
    info: BlockchainAccount

    """
    This node could be used for a cursor-based pagination of account transactions.
    """
    transactions(
        """
        By default there is special latency added for the fetched recent data (several seconds) to
        ensure impossibility of inserts before the latest fetched cursor (data consistency, for reliable pagination).
        It is possible to disable this guarantee and to reduce the latency of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: "master_seq_no_range"
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        aborted: Boolean

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: String,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: String,


        "This field is mutually exclusive with 'last'"
        first: Int
        after: String

        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
        """
        Defines query scope.
        If `true` then query performed on a maximum time range supported by the cloud.
        If `false` then query performed on a recent time range supported by the cloud.
        You can find an actual information about time ranges on evercloud documentation.
        """
        archive: Boolean
    ): BlockchainTransactionsConnection

    """
    This node could be used for a cursor-based pagination of account messages.
    """
    messages(
        """
        By default there is special latency added for the fetched recent data (several seconds) to
        ensure impossibility of inserts before the latest fetched cursor (data consistency, for reliable pagination).
        It is possible to disable this guarantee and to reduce the latency of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The messages could be filtered by seq_no of corresponding masterchain blocks.
        See also: "master_seq_no_range"
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "Filter messages by counterparties (max - 5 counterparties)."
        counterparties: [String!]

        "Filter messages by type (multiple are allowed, all messages if not specified)."
        msg_type: [BlockchainMessageTypeFilterEnum!]

        "Optional filter by min value (unoptimized, query could be dropped by timeout)"
        min_value: String

        "This field is mutually exclusive with 'last'"
        first: Int
        after: String,

        "This field is mutually exclusive with 'first'"
        last: Int
        before: String,
        """
        Defines query scope.
        If `true` then query performed on a maximum time range supported by the cloud.
        If `false` then query performed on a recent time range supported by the cloud.
        You can find an actual information about time ranges on evercloud documentation.
        """
        archive: Boolean
    ): BlockchainMessagesConnection
}

extend type Query {
    """
    Blockchain-related information (blocks, transactions, etc.)
    """
    blockchain: BlockchainQuery
}
