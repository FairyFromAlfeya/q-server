"""
This type is unstable
"""
type BlockchainMasterSeqNoRange {
    "Minimum inclusive seq_no of corresponding master blocks"
    start: Int
    "Maximum exclusive seq_no of corresponding master blocks"
    end: Int
}

"""
This type is unstable
"""
input BlockchainMasterSeqNoFilter {
    "Minimum inclusive seq_no of corresponding master blocks"
    start: Int
    "Maximum exclusive seq_no of corresponding master blocks"
    end: Int
}

"""
This type is unstable
"""
type BlockchainBlocksConnection {
    edges: [BlockchainBlocksEdge!]!
    pageInfo: PageInfo!
}

"""
This type is unstable
"""
type BlockchainBlocksEdge {
    node: BlockchainBlock!
    cursor: String!
}

"""
This type is unstable
"""
type BlockchainTransactionsConnection {
    edges: [BlockchainTransactionEdge!]!
    pageInfo: PageInfo!
}

"""
This type is unstable
"""
type BlockchainTransactionEdge {
    node: BlockchainTransaction!
    cursor: String!
}

"""
This type is unstable
"""
type BlockchainQuery {
    """
    **UNSTABLE**
    Returns seq_no range such that:
    1. masterblock(start).chain_order is less or equal to chain_order values of all transactions and blocks with time >= time_start
    2. masterblock(end).chain_order is greater than chain_order values of all transactions and blocks with time <= time_end
    If time_start is null, then start is null. If time_end is null, then end is null.
    **CAUTION:** resulting seq_no ranges for adjacent time ranges could overlap.
    """
    master_seq_no_range(
         time_start: Int,
         time_end: Int,
    ): BlockchainMasterSeqNoRange

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of key blocks.
    """
    key_blocks(
        """
        Filter by seq_no.
        """
        seq_no: BlockchainMasterSeqNoFilter

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainBlocksConnection

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of blocks (with optional workchain and thread filters).
    """
    workchain_blocks(
        """
        The blocks could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockсhain { master_seq_no_range }
        """
        master_seq_no: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int
        "Optional filter by thread (former 'shard'). Workchain filter is required if this filter is used"
        thread: String,

        "Optional filter by minimum transactions in a block (unoptimized, query could be dropped by timeout)"
        min_tr_count: Int,
        "Optional filter by maximum transactions in a block (unoptimized, query could be dropped by timeout)"
        max_tr_count: Int,

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainBlocksConnection

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of transactions filtered by workchains.
    """
    workchain_transactions(
        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockchain { master_seq_no_range }
        """
        master_seq_no: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: Int,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: Int,

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainTransactionsConnection

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of transactions filtered by account addresses.
    """
    account_transactions(
        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockchain { master_seq_no_range }
        """
        master_seq_no: BlockchainMasterSeqNoFilter

        "Account address is required (64 hex symbols)"
        account_address: String!

        aborted: Boolean

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: Int,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: Int,


        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainTransactionsConnection
}

extend type Query {
    "This node is unstable"
    blockchain(accessKey: String): BlockchainQuery
}
