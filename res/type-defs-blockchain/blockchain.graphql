"""
This type is unstable
"""
type BlockchainMasterSeqNoRange {
    "Minimum inclusive seq_no of corresponding master blocks"
    start: Int
    "Maximum exclusive seq_no of corresponding master blocks"
    end: Int
}

"""
This type is unstable
"""
input BlockchainMasterSeqNoFilter {
    "Minimum inclusive seq_no of corresponding master blocks"
    start: Int
    "Maximum exclusive seq_no of corresponding master blocks"
    end: Int
}

"""
This type is unstable
"""
type BlockchainBlocksConnection {
    edges: [BlockchainBlocksEdge!]!
    pageInfo: PageInfo!
}

"""
This type is unstable
"""
type BlockchainBlocksEdge {
    node: BlockchainBlock!
    cursor: String!
}

"""
This type is unstable
"""
type BlockchainTransactionsConnection {
    edges: [BlockchainTransactionEdge!]!
    pageInfo: PageInfo!
}

"""
This type is unstable
"""
type BlockchainTransactionEdge {
    node: BlockchainTransaction!
    cursor: String!
}

enum BlockchainMessageTypeFilterEnum {
    "External inbound"
    ExtIn
    "External outbound"
    ExtOut
    "Internal inbound"
    IntIn
    "Internal outbound"
    IntOut
}

"""
This type is unstable
"""
type BlockchainMessagesConnection {
    edges: [BlockchainMessageEdge!]!
    pageInfo: PageInfo!
}

"""
This type is unstable
"""
type BlockchainMessageEdge {
    node: BlockchainMessage!
    cursor: String!
}

type BlockchainQuery {
    """
    **UNSTABLE**
    Account-related information
    """
    account(
        "Account address is required (64 hex symbols)"
        address: String!
    ): BlockchainAccountQuery

    block(hash: String!): BlockchainBlock
    block_by_seq_no(workchain: Int!, thread: String!, seq_no: Float!): BlockchainBlock
    transaction(hash: String!): BlockchainTransaction
    message(hash: String!): BlockchainMessage

    """
    **UNSTABLE**
    Returns seq_no range such that:
    1. masterblock(start).chain_order is less or equal to chain_order values of all transactions and blocks with time >= time_start
    2. masterblock(end).chain_order is greater than chain_order values of all transactions and blocks with time <= time_end
    start is null if time_start is null or if DB doesn't have enough blocks history to determine start.
    end is null if time_end is null or new data could be added before time_end.
    **CAUTION:** resulting seq_no ranges for adjacent time ranges could overlap.
    """
    master_seq_no_range(
         time_start: Int,
         time_end: Int,
    ): BlockchainMasterSeqNoRange

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of key blocks.
    """
    key_blocks(
        """
        By default there a delay of realtime data to ensure impossibility of inserts before latest accessible cursor.
        It is possible to disable this guarantee and to reduce delay of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        Filter by master blocks seq_no.
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainBlocksConnection

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of blocks.
    """
    blocks(
        """
        By default there a delay of realtime data to ensure impossibility of inserts before latest accessible cursor.
        It is possible to disable this guarantee and to reduce delay of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The blocks could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockсhain { master_seq_no_range }
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int
        "Optional filter by thread (former 'shard'). Workchain filter is required if this filter is used"
        thread: String,

        "Optional filter by minimum transactions in a block (unoptimized, query could be dropped by timeout)"
        min_tr_count: Int,
        "Optional filter by maximum transactions in a block (unoptimized, query could be dropped by timeout)"
        max_tr_count: Int,

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainBlocksConnection

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of transactions.
    """
    transactions(
        """
        By default there a delay of realtime data to ensure impossibility of inserts before latest accessible cursor.
        It is possible to disable this guarantee and to reduce delay of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockchain { master_seq_no_range }
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: String,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: String,

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainTransactionsConnection

    """
    **DEPRECATED**: will be removed soon after May 1
    This node could be used for a cursor-based pagination of blocks (with optional workchain and thread filters).
    """
    workchain_blocks(
        """
        The blocks could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockсhain { master_seq_no_range }
        """
        master_seq_no: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int
        "Optional filter by thread (former 'shard'). Workchain filter is required if this filter is used"
        thread: String,

        "Optional filter by minimum transactions in a block (unoptimized, query could be dropped by timeout)"
        min_tr_count: Int,
        "Optional filter by maximum transactions in a block (unoptimized, query could be dropped by timeout)"
        max_tr_count: Int,

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainBlocksConnection

    """
    **DEPRECATED**: will be removed soon after May 1
    This node could be used for a cursor-based pagination of transactions filtered by workchains.
    """
    workchain_transactions(
        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockchain { master_seq_no_range }
        """
        master_seq_no: BlockchainMasterSeqNoFilter

        "Optional filter by workchain"
        workchain: Int

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: Int,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: Int,

        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainTransactionsConnection

    """
    **DEPRECATED**: will be removed soon after May 1
    This node could be used for a cursor-based pagination of transactions filtered by account addresses.
    """
    account_transactions(
        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: blockchain { master_seq_no_range }
        """
        master_seq_no: BlockchainMasterSeqNoFilter

        "Account address is required (64 hex symbols)"
        account_address: String!

        aborted: Boolean

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: Int,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: Int,


        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainTransactionsConnection
}

type BlockchainAccountQuery {
    """
    Account information (e.g. boc).
    """
    info: BlockchainAccount
    
    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of account transactions.
    """
    transactions(
        """
        By default there a delay of realtime data to ensure impossibility of inserts before latest accessible cursor.
        It is possible to disable this guarantee and to reduce delay of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean

        """
        The transactions could be filtered by seq_no of corresponding masterchain blocks.
        See also: "master_seq_no_range"
        """
        master_seq_no_range: BlockchainMasterSeqNoFilter

        aborted: Boolean

        "Optional filter by min balance_delta (unoptimized, query could be dropped by timeout)"
        min_balance_delta: String,
        "Optional filter by max balance_delta (unoptimized, query could be dropped by timeout)"
        max_balance_delta: String,


        "This field is mutually exclusive with 'last'"
        first: Int 
        after: String
        
        "This field is mutually exclusive with 'first'"
        last: Int
        before: String
    ): BlockchainTransactionsConnection

    """
    **UNSTABLE**
    This node could be used for a cursor-based pagination of account messages.
    """
    messages(
        """
        By default there a delay of realtime data to ensure impossibility of inserts before latest accessible cursor.
        It is possible to disable this guarantee and to reduce delay of realtime data by setting this flag to true.
        """
        allow_latest_inconsistent_data: Boolean
     
        """
        The messages could be filtered by seq_no of corresponding masterchain blocks.
        See also: "master_seq_no_range"
        """			
        master_seq_no_range: BlockchainMasterSeqNoFilter

        "Filter messages by counterparties (max - 5 counterparties)."
        counterparties: [String!]
        
        "Filter messages by type (multiple are allowed, all messages if not specified)."
        msg_type: [BlockchainMessageTypeFilterEnum!]

        "Optional filter by min value (unoptimized, query could be dropped by timeout)"
        min_value: String

        "This field is mutually exclusive with 'last'"
        first: Int
        after: String,

        "This field is mutually exclusive with 'first'"
        last: Int
        before: String,
    ): BlockchainMessagesConnection
}

extend type Query {
    """
    **UNSTABLE**
    Blockchain-related information (blocks, transactions, etc.)
    """
    blockchain: BlockchainQuery
}
