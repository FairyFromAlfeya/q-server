input Request {
    id: String
    body: String
}

type Info {
    version: String
}

extend type Query {
    info: Info
    getAccountsCount(accessKey: String): Float
    getTransactionsCount(accessKey: String): Float
    getAccountsTotalBalance(accessKey: String): String

    "Returns one time access key for management functions"
    getManagementAccessKey: String
}

input AccessKey {
    key: String
    restrictToAccounts: [String]
}

type Mutation {
    postRequests(requests: [Request], accessKey: String): [String]

    "Register GraphQL services access keys. Returns number of actually registered keys"
    registerAccessKeys(
        "Account contract address"
        account: String,
        "Access keys associated with account"
        keys: [AccessKey],
        "Management access key obtained with getManagementAccessKey and signed using key pair of account contract"
        signedManagementAccessKey: String,
    ): Int

    "Revoke GraphQL services access keys. Returns number of actually revoked keys"
    revokeAccessKeys(
        "Account contract address"
        account: String,
        "Access keys associated with account"
        keys: [String],
        "Management access key obtained with getManagementAccessKey and signed using key pair of account contract"
        signedManagementAccessKey: String,
    ): Int

    "Stop listeners for specified operations"
    finishOperations(
        "Operation identifiers"
        operationIds: [String],
    ): Int
}
